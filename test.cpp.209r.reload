
;; Function std::string test(std::string, std::string) (test, funcdef_no=819, decl_uid=20173, cgraph_uid=265)


********** Local #1: **********

New elimination table:
Can eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=16, prev_offset=0)
Can eliminate 20 to 6 (offset=-24, prev_offset=0)
Updating elimination of equiv for reg 65
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) rzw {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (1) rzw {*call_value}
      Removing equiv init insn 18 (freq=0)
   18: {r65:DI=frame:DI+0xf;clobber flags:CC;}
      REG_UNUSED flags:CC
      REG_EQUIV frame:DI-0x1
deleting insn with uid = 18.
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 19:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 20:  (0) =r  (1) %0  (2) rme {*adddi_1}
Changing pseudo 65 in operand 1 of insn 21 on equiv frame:DI+0xf
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=11,losers=1 -- reject
          alt=4,overall=16,losers=2 -- reject
          alt=5,overall=16,losers=2 -- reject
          alt=6,overall=22,losers=2 -- reject
          alt=7,overall=616,losers=1 -- reject
          alt=8,overall=22,losers=2 -- reject
          alt=9,overall=10,losers=1 -- reject
          alt=10,overall=11,losers=1 -- reject
          alt=11,overall=10,losers=1 -- reject
          alt=12,overall=10,losers=1 -- reject
          alt=13,overall=616,losers=1 -- reject
          alt=14,overall=16,losers=1 -- reject
          alt=15,overall=16,losers=1 -- reject
          alt=16,overall=22,losers=2 -- reject
	 Choosing alt 1 in insn 21:  (0) r  (1) rem {*movdi_internal_rex64}
      Creating newreg=70, assigning class GENERAL_REGS to r70
   21: si:DI=r70:DI
      REG_DEAD r65:DI
      REG_EQUAL frame:DI-0x1
    Inserting insn reload before:
   49: {r70:DI=frame:DI+0xf;clobber flags:CC;}

          alt=0,overall=17,losers=2,rld_nregs=2
          alt=1,overall=17,losers=2,rld_nregs=2
          alt=2,overall=18,losers=2 -- reject
          alt=3,overall=1,losers=0,rld_nregs=0
          alt=0,overall=18,losers=2 -- reject
          alt=1,overall=18,losers=2 -- reject
          alt=2,overall=10,losers=1 -- reject
          alt=3,overall=10,losers=1 -- reject
	 Choosing alt 3 in insn 49:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) rzw {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) rzw {*call}

********** Inheritance #1: **********

EBB 2 3
EBB 4
EBB 5

********** Pseudo live ranges #1: **********

  BB 4
   Insn 26: point = 0
   Insn 25: point = 0
   Insn 23: point = 1
   Insn 22: point = 1
   Insn 21: point = 2
	Hard reg 4 is preferable by r70 with profit 1
   Insn 49: point = 3
   Insn 20: point = 4
   Insn 19: point = 6
   Insn 42: point = 8
  BB 5
   Insn 37: point = 10
   Insn 34: point = 10
  BB 3
   Insn 47: point = 12
  BB 2
   Insn 13: point = 13
   Insn 12: point = 13
   Insn 11: point = 13
   Insn 10: point = 14
   Insn 9: point = 14
   Insn 8: point = 14
   Insn 4: point = 15
   Insn 3: point = 16
   Insn 2: point = 17
 r62: [7..17]
 r63: [14..16]
 r64: [13..15]
 r66: [1..4]
 r67: [5..6]
 r68: [0..8]
 r70: [2..3]
Compressing live ranges: from 18 to 8 - 44%
Ranges after the compression:
 r62: [4..7]
 r63: [6..7]
 r64: [6..7]
 r66: [0..1]
 r67: [2..3]
 r68: [0..5]
 r70: [0..1]
	 Assigning to 70 (cl=GENERAL_REGS, orig=70, freq=2, tfirst=70, tfreq=2)...
	   Assign 4 to reload r70 (freq=2)

********** Undoing inheritance #1: **********


********** Local #2: **********

New elimination table:
Can eliminate 16 to 7 (offset=48, prev_offset=48)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=16, prev_offset=16)
Can eliminate 20 to 6 (offset=-24, prev_offset=0)
changing reg in insn 2
changing reg in insn 34
changing reg in insn 19
changing reg in insn 12
changing reg in insn 9
changing reg in insn 3
changing reg in insn 8
changing reg in insn 4
changing reg in insn 11
changing reg in insn 20
changing reg in insn 22
changing reg in insn 19
changing reg in insn 20
changing reg in insn 42
changing reg in insn 25


try_optimize_cfg iteration 1

Forwarding edge 2->3 to 5 failed.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 13.
verify found no changes in insn with uid = 23.
verify found no changes in insn with uid = 26.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 5 count 6 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 5 count 6 (    1)


std::string test(std::string, std::string)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={7d,3u} r1={6d,1u} r2={5d} r3={1d,4u} r4={10d,6u} r5={11d,7u} r6={2d,2u} r7={1d,10u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1u} r17={6d} r18={4d} r19={4d} r20={1e} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d} r38={5d} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} 
;;    total ref usage 246{211d,34u,1e} in 21{17 regular + 4 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 7 [sp] 16 [argp]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 1 [dx] 4 [si] 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp]
;; live  kill	
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/f:DI 3 bx [orig:62 <retval> ] [62])
        (reg:DI 5 di [ .result_ptr ])) lib/src/test.cpp:19 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ .result_ptr ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 4 si [orig:63 a ] [63])
        (reg:DI 4 si [ a ])) lib/src/test.cpp:19 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ a ])
        (nil)))
(insn 4 3 5 2 (set (reg/v/f:DI 6 bp [orig:64 b ] [64])
        (reg:DI 1 dx [ b ])) lib/src/test.cpp:19 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [ b ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:DI 4 si)
        (reg/v/f:DI 4 si [orig:63 a ] [63])) /usr/include/c++/4.8.1/bits/basic_string.h:2368 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 4 si [orig:63 a ] [63])
        (nil)))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:62 <retval> ] [62])) /usr/include/c++/4.8.1/bits/basic_string.h:2368 87 {*movdi_internal_rex64}
     (nil))
(call_insn 10 9 11 2 (call (mem:QI (symbol_ref:DI ("_ZNSsC1ERKSs") [flags 0x41]  <function_decl 0x7f9b22ae1f00 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) /usr/include/c++/4.8.1/bits/basic_string.h:2368 665 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 11 10 12 2 (set (reg:DI 4 si)
        (reg/v/f:DI 6 bp [orig:64 b ] [64])) /usr/include/c++/4.8.1/bits/basic_string.h:2369 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:64 b ] [64])
        (nil)))
(insn 12 11 13 2 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:62 <retval> ] [62])) /usr/include/c++/4.8.1/bits/basic_string.h:2369 87 {*movdi_internal_rex64}
     (nil))
(call_insn 13 12 45 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSs6appendERKSs") [flags 0x41]  <function_decl 0x7f9b22aa7400 append>) [0 append S1 A8])
            (const_int 0 [0]))) /usr/include/c++/4.8.1/bits/basic_string.h:2369 672 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 1 [0x1])
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
;;  succ:       4 (ABNORMAL,ABNORMAL_CALL,EH)
;;              3 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 7 [sp] 16 [argp]
;; live  out 	 3 [bx] 7 [sp]

;; basic block 3, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 [100.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	
;; live  kill	
(note 45 13 47 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(jump_insn 47 45 48 3 (set (pc)
        (label_ref 46)) 659 {jump}
     (nil)
 -> 46)
;;  succ:       5 [100.0%] 
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

(barrier 48 47 41)
;; basic block 4, loop depth 0, count 0, freq 0
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 4 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 4 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 3 [bx] 7 [sp] 16 [argp]
;; lr  use 	 3 [bx] 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp]
;; live  kill	 17 [flags]
(code_label/s 41 48 43 4 4 "" [1 uses])
(note 43 41 42 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 42 43 18 4 (set (reg:DI 6 bp [68])
        (reg:DI 0 ax)) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(note 18 42 19 4 NOTE_INSN_DELETED)
(insn 19 18 20 4 (set (reg/f:DI 5 di [orig:67 MEM[(const struct basic_string *)_2(D)]._M_dataplus._M_p ] [67])
        (mem/f:DI (reg/f:DI 3 bx [orig:62 <retval> ] [62]) [6 MEM[(const struct basic_string *)_2(D)]._M_dataplus._M_p+0 S8 A64])) /usr/include/c++/4.8.1/bits/basic_string.h:539 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:62 <retval> ] [62])
        (nil)))
(insn 20 19 49 4 (parallel [
            (set (reg/f:DI 5 di [orig:66 D.22039 ] [66])
                (plus:DI (reg/f:DI 5 di [orig:67 MEM[(const struct basic_string *)_2(D)]._M_dataplus._M_p ] [67])
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/4.8.1/bits/basic_string.h:539 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 5 di [orig:67 MEM[(const struct basic_string *)_2(D)]._M_dataplus._M_p ] [67])
        (nil)))
(insn 49 20 21 4 (parallel [
            (set (reg:DI 4 si [70])
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 15 [0xf])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/4.8.1/bits/basic_string.h:539 274 {*adddi_1}
     (nil))
(insn 21 49 22 4 (set (reg:DI 4 si)
        (reg:DI 4 si [70])) /usr/include/c++/4.8.1/bits/basic_string.h:539 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [70])
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -1 [0xffffffffffffffff]))
            (nil))))
(insn 22 21 23 4 (set (reg:DI 5 di)
        (reg/f:DI 5 di [orig:66 D.22039 ] [66])) /usr/include/c++/4.8.1/bits/basic_string.h:539 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 5 di [orig:66 D.22039 ] [66])
        (nil)))
(call_insn 23 22 25 4 (call (mem:QI (symbol_ref:DI ("_ZNSs4_Rep10_M_disposeERKSaIcE") [flags 0x41]  <function_decl 0x7f9b2295d200 _M_dispose>) [0 _M_dispose S1 A8])
        (const_int 0 [0])) /usr/include/c++/4.8.1/bits/basic_string.h:539 665 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 25 23 26 4 (set (reg:DI 5 di)
        (reg:DI 6 bp [68])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 6 bp [68])
        (nil)))
(call_insn 26 25 27 4 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7f9b235d1200 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 665 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 27 26 46)
;; basic block 5, loop depth 0, count 0, freq 20000, maybe hot
;; Invalid sum of incoming frequencies 10000, should be 20000
;;  prev block 4, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax]
;; live  kill	
(code_label 46 27 40 5 5 "" [1 uses])
(note 40 46 34 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 34 40 37 5 (set (reg/i:DI 0 ax)
        (reg/f:DI 3 bx [orig:62 <retval> ] [62])) lib/src/test.cpp:21 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:62 <retval> ] [62])
        (nil)))
(insn 37 34 0 5 (use (reg/i:DI 0 ax)) lib/src/test.cpp:21 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Function (static initializers for lib/src/test.cpp) (_GLOBAL__sub_I_msg, funcdef_no=968, decl_uid=21547, cgraph_uid=430) (executed once)


********** Local #1: **********

New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=16, prev_offset=0)
Can eliminate 20 to 6 (offset=-8, prev_offset=0)
Updating elimination of equiv for reg 59
      Removing equiv init insn 5 (freq=10000)
    5: {r59:DI=frame:DI+0xf;clobber flags:CC;}
      REG_UNUSED flags:CC
      REG_EQUIV frame:DI-0x1
deleting insn with uid = 5.
Changing pseudo 59 in operand 1 of insn 6 on equiv frame:DI+0xf
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=11,losers=1 -- reject
          alt=4,overall=16,losers=2 -- reject
          alt=5,overall=16,losers=2 -- reject
          alt=6,overall=22,losers=2 -- reject
          alt=7,overall=616,losers=1 -- reject
          alt=8,overall=22,losers=2 -- reject
          alt=9,overall=10,losers=1 -- reject
          alt=10,overall=11,losers=1 -- reject
          alt=11,overall=10,losers=1 -- reject
          alt=12,overall=10,losers=1 -- reject
          alt=13,overall=616,losers=1 -- reject
          alt=14,overall=16,losers=1 -- reject
          alt=15,overall=16,losers=1 -- reject
          alt=16,overall=22,losers=2 -- reject
	 Choosing alt 1 in insn 6:  (0) r  (1) rem {*movdi_internal_rex64}
      Creating newreg=60, assigning class GENERAL_REGS to r60
    6: dx:DI=r60:DI
      REG_DEAD r59:DI
      REG_EQUAL frame:DI-0x1
    Inserting insn reload before:
   16: {r60:DI=frame:DI+0xf;clobber flags:CC;}

          alt=0,overall=17,losers=2,rld_nregs=2
          alt=1,overall=17,losers=2,rld_nregs=2
          alt=2,overall=18,losers=2 -- reject
          alt=3,overall=1,losers=0,rld_nregs=0
          alt=0,overall=18,losers=2 -- reject
          alt=1,overall=18,losers=2 -- reject
          alt=2,overall=10,losers=1 -- reject
          alt=3,overall=10,losers=1 -- reject
	 Choosing alt 3 in insn 16:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) rzw {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (1) rzw {*call_value}

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 13: point = 0
   Insn 12: point = 0
   Insn 11: point = 0
   Insn 10: point = 0
   Insn 9: point = 0
   Insn 8: point = 0
   Insn 7: point = 0
   Insn 6: point = 0
	Hard reg 1 is preferable by r60 with profit 1000
   Insn 16: point = 1
 r60: [0..1]
Compressing live ranges: from 2 to 2 - 100%
Ranges after the compression:
 r60: [0..1]
	 Assigning to 60 (cl=GENERAL_REGS, orig=60, freq=2000, tfirst=60, tfreq=2000)...
	   Assign 1 to reload r60 (freq=2000)

********** Undoing inheritance #1: **********


********** Local #2: **********

New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=32)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=16, prev_offset=16)
Can eliminate 20 to 6 (offset=-8, prev_offset=0)


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


(static initializers for lib/src/test.cpp)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={3d} r1={6d,3u} r2={3d} r4={5d,2u} r5={5d,2u} r7={1d,5u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r17={3d} r18={2d} r19={2d} r20={1e} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} 
;;    total ref usage 125{112d,12u,1e} in 9{7 regular + 2 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	 17 [flags]
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(note 5 2 16 2 NOTE_INSN_DELETED)
(insn 16 5 6 2 (parallel [
            (set (reg:DI 1 dx [60])
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 15 [0xf])))
            (clobber (reg:CC 17 flags))
        ]) lib/src/test.cpp:15 274 {*adddi_1}
     (nil))
(insn 6 16 7 2 (set (reg:DI 1 dx)
        (reg:DI 1 dx [60])) lib/src/test.cpp:15 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [60])
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -1 [0xffffffffffffffff]))
            (nil))))
(insn 7 6 8 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f9b2272b1c8 *.LC0>)) lib/src/test.cpp:15 87 {*movdi_internal_rex64}
     (nil))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (symbol_ref:DI ("msg") [flags 0x2]  <var_decl 0x7f9b2258bed8 msg>)) lib/src/test.cpp:15 87 {*movdi_internal_rex64}
     (nil))
(call_insn 9 8 10 2 (call (mem:QI (symbol_ref:DI ("_ZNSsC1EPKcRKSaIcE") [flags 0x41]  <function_decl 0x7f9b22ae1700 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) lib/src/test.cpp:15 665 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 10 9 11 2 (set (reg:DI 1 dx)
        (symbol_ref:DI ("__dso_handle") [flags 0x42]  <var_decl 0x7f9b22664e40 __dso_handle>)) lib/src/test.cpp:15 87 {*movdi_internal_rex64}
     (nil))
(insn 11 10 12 2 (set (reg:DI 4 si)
        (symbol_ref:DI ("msg") [flags 0x2]  <var_decl 0x7f9b2258bed8 msg>)) lib/src/test.cpp:15 87 {*movdi_internal_rex64}
     (nil))
(insn 12 11 13 2 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZNSsD1Ev") [flags 0x41]  <function_decl 0x7f9b22ae4500 __comp_dtor >)) lib/src/test.cpp:15 87 {*movdi_internal_rex64}
     (nil))
(call_insn 13 12 0 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_atexit") [flags 0x41]  <function_decl 0x7f9b226b2100 __cxa_atexit>) [0 __cxa_atexit S1 A8])
            (const_int 0 [0]))) lib/src/test.cpp:15 672 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

